@using DigitalHealthCheckCommon
@using DigitalHealthCheckEF;
@using DigitalHealthCheckWeb.Model;
@inherits Page

@if (ErrorList.Any())
{
    <GDSErrorSummary ErrorList="@ErrorList" Title="@("There is a problem")" />
}


<h2 class="govuk-heading-m">Select two health priorities to follow-up and take action</h2>

<p class="govuk-body">You can reduce your risk of heart and circulatory disease, diabetes and even dementia and some cancers by making some positive changes to your lifestyle. You can also help to better manage these and other long-term conditions.</p>

<p class="govuk-body">In the next step, we will provide you with follow-up support and advice that is tailored to your results, priorities and preferences. </p>

<form method="post" novalidate>

    <AntiForgery AntiForgeryToken="@AntiForgery" />

    <GDSRadios Name="FirstHealthPriority"
               Items="FirstHealthPriorities"
               Classes="govuk-!-margin-bottom-6"
               ErrorMessage="FirstHealthPrioritiesError.AsErrorMessageComponent()"
               IdPrefix="first-priority"
               FieldSet="@(
                new GDSFieldSet.Options {
                    Legend = new GDSFieldSet.LegendOptions {
                        Text = "Select one of the following as your first health priority.",
                        Classes="govuk-fieldset__legend--s"
                    }
})" />

    <GDSRadios Name="SecondHealthPriority"
               Items="SecondHealthPriorities"
               ErrorMessage="SecondHealthPrioritiesError.AsErrorMessageComponent()"
               IdPrefix="second-priority"
               FieldSet="@(
                new GDSFieldSet.Options {
                    Legend = new GDSFieldSet.LegendOptions {
                        Text = "Select one of the following as your second health priority.",
                        Classes="govuk-fieldset__legend--s"
                    }
                })" />

    <h2 class="govuk-heading-m">Follow-up on the results of your NHS Health Check</h2>

    <p class="govuk-body">Please select which item you would like to follow up with first.</p>

    @if (Check.GenderAffirmation == true)
    {
        @if (Variant)
        {
            @if (CurrentGender)
            {
                <p class="govuk-body">We recognise that you @(PrefersNotToDiscloseIdentity? "would prefer not to say your gender identity" : ($"are {RichIdentity}")). The results above reflect your current gender identity. We will also email you the initially calculated results that were based on your sex at birth. Your individual risk results are likely to be between the two because of your gender-affirmation treatment.</p>
            }
            else
            {
                
                <p class="govuk-body">We recognise that you @(PrefersNotToDiscloseIdentity? "would prefer not to say your gender identity" : ($"are {RichIdentity}")). The results above reflect your sex assigned at birth. We will also email you the initially calculated results that were based on your current gender identity. Your individual risk results are likely to be between the two because of your gender-affirmation treatment.</p>
            }

            <GDSDetails SummaryText="Why would I want to look at both sets of results?">
                <p class="govuk-body">There is limited research as to whether undergoing gender-affirmation treatments has an impact on your risk of developing heart and circulatory disease, or Type 2 diabetes.</p>
                <p class="govuk-body">There is currently not enough research to give a precise risk based on the type and duration of your gender-affirmation treatment. The research available suggests that your risk will change from your sex assigned at birth and move towards your current new gender identity over time. You may wish to view results for both your sex assigned at birth and your current gender identity, because your individual results are likely to be between the two. This approximation will be close, because the difference in the two sets of risk results is about 5%.</p>
                <p class="govuk-body">You have now seen both sets of results. You can choose how you would like to approach the follow-up support for improving your health. In any case, we recognise and respect your current gender identity. We also recognise that this can be a difficult question for some people.</p>
                <p class="govuk-body">You may want to follow up with a healthcare provider, including someone at your GP clinic, an endocrine or gender identity team (if you are able to access one), or one of the specialist services recommended by trans and non-binary communties such as Dean Street, CliniQ, or the Beaumont Society.</p>
            
                <p class="govuk-body">You can <a class="govuk-link" rel="noreferrer noopener" target="_blank" href="https://www.dean.st/" title="Access Dean Street for advice from clinicians and counsellors">access Dean Street for advice from clinicians and counsellors (opens in a new tab)</a>.</p>
        <p class="govuk-body">You can <a class="govuk-link" rel="noreferrer noopener" target="_blank" href="https://cliniq.org.uk/" title="Access CliniQ for advice from clinicians and counsellors">access CliniQ for advice from clinicians and counsellors (opens in a new tab)</a>.</p>
        <p class="govuk-body">You can <a class="govuk-link" rel="noreferrer noopener" target="_blank" href="https://www.beaumontsociety.org.uk/" title="Access the Beaumont Society for links to relevant support services">access the Beaumont Society for links to relevant support services (opens in a new tab)</a>.</p>

        <p class="govuk-body">(Note that this should not be interpreted as an endorsement of the named specialist services by Southwark Council. Please see the Terms and Conditions for more detail.) </p>
            </GDSDetails>

            <p class="govuk-body">Now that you have seen both sets of results, you can choose how you would like to approach the follow-up support for improving your health.</p>
            <h3 class="govuk-heading-s">View follow-up support based on your current gender identity</h3>

            @if (ShowGPFollowUp)
            {
                <div class="govuk-button-group">
                    <GDSButton PreventDoubleClick="true" Text="Follow-up – visit your GP clinic" Name="SubmitAction" Value="GPCurrentGender" />
                    <GDSButton PreventDoubleClick="true" Classes="govuk-button--secondary" Text="Follow-up – on your first health priority" Name="SubmitAction" Value="PrioritiesCurrentGender" />
                </div>
            }
            else
            {
                <GDSButton PreventDoubleClick="true" Text="Follow-up – on your first health priority" Name="SubmitAction" Value="PrioritiesCurrentGender" />
            }

            <h3 class="govuk-heading-s">View follow-up support based on your sex assigned at birth</h3>

            @if (ShowGPFollowUp)
            {
                <div class="govuk-button-group">
                    <GDSButton PreventDoubleClick="true" Text="Follow-up – visit your GP clinic" Name="SubmitAction" Value="GPSexAtBirth" />
                    <GDSButton PreventDoubleClick="true" Classes="govuk-button--secondary" Text="Follow-up – on your first health priority" Name="SubmitAction" Value="PrioritiesSexAtBirth" />
                </div>
            }
            else
            {
                <GDSButton PreventDoubleClick="true" Text="Follow-up – on your first health priority" Name="SubmitAction" Value="PrioritiesSexAtBirth" />
            }
        }
        else
        {
            @if (CurrentGender)
            {
                
                <p class="govuk-body">We recognise that you @(PrefersNotToDiscloseIdentity? "would prefer not to say your gender identity" : ($"are {RichIdentity}")). The results above reflect your current gender identity. You can also view your results for your sex assigned at birth. Your individual risk results are likely to be between the two because of your gender-affirmation treatment.</p>

                <p class="govuk-body">If you choose not to see the second set of results, the follow-up pages will be based on your current gender identity. If you choose to see the second set of results, you will be sent both results via email and you will have the choice of how to approach the follow-up pages.</p>
            }
            else
            {
                <p class="govuk-body">We recognise that you @(PrefersNotToDiscloseIdentity? "would prefer not to say your gender identity" : ($"are {RichIdentity}")). The results above reflect your sex assigned at birth. You can also view your results for your current gender identity. Your individual risk results are likely to be between the two because of your gender-affirmation treatment.</p>

                <p class="govuk-body">If you choose not to see the second set of results, the follow-up pages will be based on your sex assigned at birth. If you choose to see the second set of results, you will be sent both results via email and you will have the choice of how to approach the follow-up pages.</p>
            }

            <GDSDetails SummaryText="Why would I want to look at both sets of results?">
                <p class="govuk-body">There is limited research as to whether undergoing gender-affirmation treatments has an impact on your risk of developing heart and circulatory disease, or Type 2 diabetes.</p>
                <p class="govuk-body">There is currently not enough research to give a precise risk based on the type and duration of your gender-affirmation treatment. The research available suggests that your risk will change from your sex assigned at birth and move towards your current new gender identity over time. You may wish to view results for both your sex assigned at birth and your current gender identity, because your individual results are likely to be between the two. This approximation will be close, because the difference in the two sets of risk results is about 5%.</p>
                <p class="govuk-body">You have the option to view both results. You can decide whether you would like to view the second set. In any case, we recognise and respect your current gender identity. We also recognise that this can be a difficult question for some people.</p>
                <p class="govuk-body">You may want to follow up with a healthcare provider, including someone at your GP clinic, an endocrine or gender identity team (if you are able to access one), or one of the specialist services recommended by trans and non-binary communties such as Dean Street, CliniQ, or the Beaumont Society.</p>
            
                <p class="govuk-body">You can <a class="govuk-link" rel="noreferrer noopener" target="_blank" href="https://www.dean.st/" title="Access Dean Street for advice from clinicians and counsellors">access Dean Street for advice from clinicians and counsellors (opens in a new tab)</a>.</p>
        <p class="govuk-body">You can <a class="govuk-link" rel="noreferrer noopener" target="_blank" href="https://cliniq.org.uk/" title="Access CliniQ for advice from clinicians and counsellors">access CliniQ for advice from clinicians and counsellors (opens in a new tab)</a>.</p>
        <p class="govuk-body">You can <a class="govuk-link" rel="noreferrer noopener" target="_blank" href="https://www.beaumontsociety.org.uk/" title="Access the Beaumont Society for links to relevant support services">access the Beaumont Society for links to relevant support services (opens in a new tab)</a>.</p>

        <p class="govuk-body">(Note that this should not be interpreted as an endorsement of the named specialist services by Southwark Council. Please see the Terms and Conditions for more detail.) </p>
            </GDSDetails>

            <GDSButton PreventDoubleClick="true" Text="@($"Click here to recalculate your results for {(CurrentGender ? "your sex assigned at birth" : "your current gender identity")}")" Name="SubmitAction" Value="Recalculate" />

            <p class="govuk-body">View follow-up support based on @(CurrentGender ? "your current gender identity" : "your sex assigned at birth").</p>   

            @if (ShowGPFollowUp)
            {
                <div class="govuk-button-group">
                    <GDSButton PreventDoubleClick="true" Text="Follow-up – visit your GP clinic" Name="SubmitAction" Value="GP" />
                    <GDSButton PreventDoubleClick="true" Classes="govuk-button--secondary" Text="Follow-up – on your first health priority" Name="SubmitAction" Value="Priorities" />
                </div>
            }
            else
            {
                <GDSButton PreventDoubleClick="true" Text="Follow-up – on your first health priority" Name="SubmitAction" Value="Priorities" />
            }
        }
    }
    else
    {
        @if (ShowGPFollowUp)
        {
            <div class="govuk-button-group">
                <GDSButton PreventDoubleClick="true" Text="Follow-up – visit your GP clinic" Name="SubmitAction" Value="GP" />
                <GDSButton PreventDoubleClick="true" Classes="govuk-button--secondary" Text="Follow-up – on your first health priority" Name="SubmitAction" Value="Priorities" />
            </div>
        }
        else
        {
            <GDSButton PreventDoubleClick="true" Text="Follow-up – on your first health priority" Name="SubmitAction" Value="Priorities" />
        }
    }

    
</form>

@code {
    public bool CurrentGender => (Variant ?  Check.Variant.Sex : Check.SexForResults) != Check.SexAtBirth;

    public bool PrefersNotToDiscloseIdentity => Check.Identity == "skip";

    public string AOrAn(int number) => number switch
    {
        8 => "an",
        11 => "an",
        18 => "an",
        var x when (x >= 80 && x <= 89) => "an",
        _ => "a"
    };

    public string RichIdentity => Check.Identity switch
    {
        "transman" => "a trans man",
        "transwoman" => "a trans woman",
        "nonbinary" => "nonbinary",
        "intersex" => "intersex",
        "custom" => Check.CustomIdentity,
        _ => ""
    };

    private bool ShowGPFollowUp => Result.BloodPressure == BloodPressureStatus.Severe ||
        Result.BloodSugar == BloodSugarStatus.Severe ||
        Result.BodyMassIndex == BodyMassIndexStatus.SeverelyUnderweight ||
        Result.HeartDisease == DefaultStatus.Warning ||
        Result.HeartDisease == DefaultStatus.Danger ||//High risk for GP follow up for CVD is 10%+ which is Amber
        Result.Diabetes == DefaultStatus.Danger;

    private const string UnknownStatusText = "Unknown";

    [Parameter]
    public HealthCheck Check { get; set; }

    [Parameter]
    public bool Variant { get; set; }

    [Parameter]
    public string FirstHealthPrioritiesError { get; set; }

    [Parameter]
    public string SecondHealthPrioritiesError { get; set; }

    [Parameter]
    public string FirstHealthPriority { get; set; }

    [Parameter]
    public string SecondHealthPriority { get; set; }

    private struct Priority
    {
        public string Value { get; private set; }

        public string Text { get; private set; }

        public Priority(string value, string text)
        {
            this.Value = value;
            this.Text = text;
        }
    }

    protected DefaultStatus OverallStatus => (DefaultStatus)(Math.Max(Math.Max((int)Result.HeartDisease, (int)Result.HeartAge), (int)Result.Diabetes));

    protected bool HighRisk => OverallStatus == DefaultStatus.Danger;

    protected TrafficLight.Status BehaviourStatus =>
        (TrafficLight.Status)TrafficLightItems
            .Where(x => x.StatusText != UnknownStatusText)
            .Select(x => (int)x.Status)
            .Max();

    IEnumerable<Priority> GetPriorities()
    {
        if (Result.BloodPressure is null)
        {
            yield return new Priority("bloodpressure", "Learn what my blood pressure is, and what this means for me");
        }
        else
        {
            yield return new Priority("improvebloodpressure", "Improve my blood pressure");
        }

        if (Result.BloodSugar is null && (Result.BodyMassIndex > BodyMassIndexStatus.Overweight || Result.BloodPressure >= BloodPressureStatus.High || Result.Diabetes == DefaultStatus.Danger))
        {
            yield return new Priority("bloodsugar", "Learn what my blood sugar level is, and what that means for me");
        }
        else if(Result.BloodSugar is not null)
        {
            yield return new Priority("improvebloodsugar", "Improve my blood sugar level");
        }

        yield return new Priority("smoking", "Stop smoking");
        yield return new Priority("alcohol", "Drink less alcohol");
        yield return new Priority("weight", "Healthy weight");

        if (Result.Cholesterol is null)
        {
            yield return new Priority("cholesterol", "Learn what my cholesterol levels are, and what this means for me");
        }
        else
        {
            yield return new Priority("improvecholesterol", "Improve my cholesterol levels");
        }
        yield return new Priority("move", "Move more");
        yield return new Priority("mental", "Mental wellbeing");
    }

    protected IList<GDSRadios.Item> FirstHealthPriorities =>
        GetPriorities().AsRadioComponents(x => x.Value, x => x.Text, FirstHealthPriority);

    protected IList<GDSRadios.Item> SecondHealthPriorities =>
        GetPriorities().AsRadioComponents(x => x.Value, x => x.Text, SecondHealthPriority);

    [Parameter]
    public Result Result { get; set; }


    public double DiabetesRisk => Variant ? Check.Variant.QDiabetes.Value : Check.QDiabetes.Value;

    public double HeartDiseaseRisk => Variant ? Check.Variant.QRisk.Value : Check.QRisk.Value;

    public int HeartAge => Variant ? Check.Variant.HeartAge.Value : Check.HeartAge.Value;

    public int Age => Check.Age.Value;

    protected string Percentage(double val) => val.ToString("n0"); //QRISK and QDIABETES already come out as percentage, so we just trunkate

    TrafficLight.Status Convert(DefaultStatus? status) =>
            status switch
            {
                DefaultStatus.Danger => TrafficLight.Status.Red,
                DefaultStatus.Warning => TrafficLight.Status.Amber,
                DefaultStatus.Healthy => TrafficLight.Status.Green,
                _ => TrafficLight.Status.Red
            };

    TrafficLight.Status Convert(BloodSugarStatus? status) =>
            status switch
            {
                BloodSugarStatus.Severe => TrafficLight.Status.Red,
                BloodSugarStatus.Danger => TrafficLight.Status.Red,
                BloodSugarStatus.Warning => TrafficLight.Status.Amber,
                BloodSugarStatus.Healthy => TrafficLight.Status.Green,
                _ => TrafficLight.Status.Red
            };

    TrafficLight.Status Convert(BodyMassIndexStatus? status) =>
        status switch
        {
            BodyMassIndexStatus.Obese => TrafficLight.Status.Red,
            BodyMassIndexStatus.Underweight => TrafficLight.Status.Red,
            BodyMassIndexStatus.Overweight => TrafficLight.Status.Amber,
            BodyMassIndexStatus.Healthy => TrafficLight.Status.Green,
            _ => TrafficLight.Status.Red
        };

    TrafficLight.Status Convert(PhysicalActivityStatus? status) =>
            status switch
            {
                PhysicalActivityStatus.Active => TrafficLight.Status.Green,
                PhysicalActivityStatus.MostlyActive => TrafficLight.Status.Amber,
                PhysicalActivityStatus.MostlyInactive => TrafficLight.Status.Red,
                PhysicalActivityStatus.Sedentary => TrafficLight.Status.Red,
                _ => TrafficLight.Status.Red
            };

    TrafficLight.Status Convert(BloodPressureStatus? status) =>
    status switch
    {
        BloodPressureStatus.Severe => TrafficLight.Status.Red,
        BloodPressureStatus.High => TrafficLight.Status.Red,
        BloodPressureStatus.SlightlyHigh => TrafficLight.Status.Amber,
        BloodPressureStatus.Healthy => TrafficLight.Status.Green,
        BloodPressureStatus.Low => TrafficLight.Status.Amber,
        _ => TrafficLight.Status.Red
    };

    private IList<string> trafficLightSortOrder = new List<string>()
{
        "Blood pressure",
        "Cholesterol",
        "Total cholesterol",
        "HDL cholesterol",
        "Cholesterol ratio",
        "Smoking",
        "Alcohol",
        "Weight",
        "Diabetes",
        "Blood sugar",
        "Physical activity",
        "Risk factors"
    };

    protected IEnumerable<TrafficLight.Item> TrafficLightItems =>
        TrafficLightItemsUnsorted
            .OrderByDescending(x => x.Status)
            .ThenBy(x => trafficLightSortOrder.IndexOf(x.HeadingText));

    private IEnumerable<TrafficLight.Item> TrafficLightItemsUnsorted
    {
        get
        {
            yield return Result.Smoker switch
            {
                DefaultStatus.Healthy => new TrafficLight.Item("Smoking", Convert(Result.Smoker), "Your results show that you don't smoke or have quit. Well done!"),
                _ => new TrafficLight.Item("Smoking", Convert(Result.Smoker), "Your results show that you currently smoke. Please consider the stop smoking services we offer in the follow-up section.")
            };

            yield return Result.Alcohol switch
            {
                DefaultStatus.Healthy => new TrafficLight.Item("Alcohol", Convert(Result.Alcohol), "Your results show that the amount of alcohol you drink is at a low-risk level. It’s important to keep your alcohol consumption as low as possible."),
                DefaultStatus.Warning => new TrafficLight.Item("Alcohol", Convert(Result.Alcohol), "Your results show that your alcohol use may be harmful to your health. Please contact your GP clinic for a non-urgent discussion of your results and to access additional support."),
                _ => new TrafficLight.Item("Alcohol", Convert(Result.Alcohol), "Your results show that you are drinking at a harmful level and may be dependent on alcohol. Please contact your GP clinic for a non-urgent appointment to discuss your results and access additional support.")
            };

            yield return Result.PhysicalActivity switch
            {
                PhysicalActivityStatus.Active => new TrafficLight.Item("Physical activity", Convert(Result.PhysicalActivity), "Your results show that you are physically active. Well done!"),
                var activity when (activity == PhysicalActivityStatus.MostlyActive && !Result.Walking) => new TrafficLight.Item("Physical activity", Convert(Result.PhysicalActivity), " Your results show that you are moderately active. Please consider increasing your activity."),
                var activity when (activity == PhysicalActivityStatus.MostlyActive && Result.Walking) => new TrafficLight.Item("Physical activity", Convert(Result.PhysicalActivity), "Your results show that you are moderately active. As so many people overestimate the amount they walk, the calculation doesn’t take walking into account when assessing your risk of developing heart and circulatory disease. Your walking is a great way to keep active. Keep it up."),
                var activity when (activity == PhysicalActivityStatus.MostlyInactive && !Result.Walking) => new TrafficLight.Item("Physical activity", Convert(Result.PhysicalActivity), "Your results show that you are moderately inactive. Please consider increasing your activity."),
                var activity when (activity == PhysicalActivityStatus.MostlyInactive && Result.Walking) => new TrafficLight.Item("Physical activity", Convert(Result.PhysicalActivity), "Your results show that you are moderately inactive. As so many people overestimate the amount they walk, the calculation doesn’t take walking into account when assessing your risk of developing heart and circulatory disease. Your walking is a great way to keep active. Keep it up."),
                var activity when (activity == PhysicalActivityStatus.Sedentary && !Result.Walking) => new TrafficLight.Item("Physical activity", Convert(Result.PhysicalActivity), "Your results show that you are inactive. Please consider increasing your activity."),
                var activity when (activity == PhysicalActivityStatus.Sedentary && Result.Walking) => new TrafficLight.Item("Physical activity", Convert(Result.PhysicalActivity), "Your results show that you are inactive. As so many people overestimate the amount they walk, the calculation doesn’t take walking into account when assessing your risk of developing heart and circulatory disease. Walking is a great way to stay active. Keep it up.")
            };

            yield return Result.BodyMassIndex switch
            {
                BodyMassIndexStatus.SeverelyUnderweight => new TrafficLight.Item("Weight", Convert(Result.BodyMassIndex), "Your results show that you are severely underweight which means that you are undernourished. If you are not already receiving care for this please contact your GP clinic urgently. If you are not able to make urgent contact with your GP clinic, please ring 111."),
                BodyMassIndexStatus.Underweight => new TrafficLight.Item("Weight", Convert(Result.BodyMassIndex), "Your results show that you are underweight which means that you might be undernourished. Please contact your GP clinic for a non-urgent discussion of your results and to access additional support."),
                BodyMassIndexStatus.Healthy => new TrafficLight.Item("Weight", Convert(Result.BodyMassIndex), "Your results show that you are a healthy weight."),
                BodyMassIndexStatus.Overweight => new TrafficLight.Item("Weight", Convert(Result.BodyMassIndex), "Your results show that you are overweight. If you want to lose weight please consider the diet and physical activity services we offer in the follow-up section."),
                _ => new TrafficLight.Item("Weight", Convert(Result.BodyMassIndex), "Your results show that you are obese. Please contact your GP clinic for a non-urgent discussion of your results and to access additional support.")
            };

            yield return Result.BloodPressure switch
            {
                BloodPressureStatus.Low => new TrafficLight.Item("Blood pressure", Convert(Result.BloodPressure), "Your results show that your blood pressure is a little low. Normally this is not a problem and can in fact reflect being very healthy. Sometimes, however, this can make people feel dizzy or unwell. If you feel unwell please contact your GP clinic."),
                BloodPressureStatus.Healthy => new TrafficLight.Item("Blood pressure", Convert(Result.BloodPressure), "Your results show that you have the ideal blood pressure. Well done!"),
                BloodPressureStatus.SlightlyHigh => new TrafficLight.Item("Blood pressure", Convert(Result.BloodPressure), "Your results show that your blood pressure is only just within the normal range. Improving your lifestyle, such as moving more, can help you to lower it."),
                BloodPressureStatus.High => new TrafficLight.Item("Blood pressure", Convert(Result.BloodPressure), "Your results show that you have high blood pressure. Please contact your GP clinic for a non-urgent discussion of your results and to access additional support."),
                BloodPressureStatus.Severe => new TrafficLight.Item("Blood pressure", Convert(Result.BloodPressure), "Your results show that you have very high blood pressure. Please contact your GP clinic urgently for a discussion of your results today. If you are not able to make urgent contact with your GP clinic today, please ring 111."),
                _ => new TrafficLight.Item("Blood pressure", TrafficLight.Status.Red, "You don't know your blood pressure. Please have it checked. It is important that you have your blood pressure checked as you may be at an increased risk of developing heart and circulatory disease. We will direct you to a way of getting this blood test done.")
                {
                    StatusText = UnknownStatusText
                }
            };

            yield return Result.Cholesterol switch
            {
                var cholesterol when (cholesterol == DefaultStatus.Healthy && Result.HeartDisease == DefaultStatus.Healthy) => new TrafficLight.Item("Cholesterol", TrafficLight.Status.Green, "Your results show that you have healthy cholesterol levels. "),
                var cholesterol when (cholesterol == DefaultStatus.Healthy && Result.HeartDisease != DefaultStatus.Healthy) => new TrafficLight.Item("Cholesterol", TrafficLight.Status.Red, "Your results show that your cholesterol is in the normal range. However, because your overall risk of developing heart and circulatory disease is high, please contact your GP clinic for a non-urgent discussion of your results and to access additional support."),
                var cholesterol when (cholesterol == DefaultStatus.Warning && Result.HeartDisease == DefaultStatus.Healthy) => new TrafficLight.Item("Cholesterol", TrafficLight.Status.Amber, "Your results show that your cholesterol is higher than it should be, however, at this stage, medicines are not normally needed to help bring it down. Please consider the healthy lifestyle services we offer in the follow-up section, particularly moving more and healthy weight for dietary support."),
                var cholesterol when (cholesterol == DefaultStatus.Warning && Result.HeartDisease != DefaultStatus.Healthy) => new TrafficLight.Item("Cholesterol", TrafficLight.Status.Red, "Your results show that both your cholesterol and the risk of developing heart and circulatory diseases are high. Please contact your GP clinic for a non-urgent appointment to discuss your results and access additional support."),
                DefaultStatus.Danger => new TrafficLight.Item("Cholesterol", TrafficLight.Status.Red, "Your results show that your cholesterol is high. Please contact your GP clinic for a non-urgent appointment to discuss your results and access additional support."),
                _ => new TrafficLight.Item("Cholesterol", TrafficLight.Status.Red, "You don't know your cholesterol levels. Please have them checked. It is important that you have your cholesterol levels checked as you may be at an increased risk of developing heart and circulatory disease. We will direct you to a way of getting this blood test done.")
                {
                    StatusText = UnknownStatusText
                }
            };

            yield return Result.Diabetes switch
            {
                DefaultStatus.Healthy => new TrafficLight.Item("Diabetes", Convert(Result.Diabetes), "Your results show that you are at a low risk of developing diabetes."),
                _ => new TrafficLight.Item("Diabetes", Convert(Result.Diabetes), "Your results show that you might be at risk of developing diabetes. Please contact your GP clinic for a non-urgent appointment to discuss your results and access additional support.")
            };

            yield return Result.BloodSugar switch
            {
                BloodSugarStatus.Healthy => new TrafficLight.Item("Blood sugar", Convert(Result.BloodSugar), "Your results show that you have normal blood sugar levels. Well done!"),
                BloodSugarStatus.Warning => new TrafficLight.Item("Blood sugar", Convert(Result.BloodSugar), "Your results show that you are at risk of developing diabetes.  Please contact your GP clinic for a non-urgent appointment to discuss your results and access additional support."),
                var bloodsugar when (bloodsugar == BloodSugarStatus.Danger && Result.Diabetes != DefaultStatus.Danger) => new TrafficLight.Item("Blood sugar", TrafficLight.Status.Red, "Your results show that you might have diabetes. Please contact your GP clinic for a non-urgent appointment to discuss your results and access additional support."),
                var bloodsugar when (bloodsugar == BloodSugarStatus.Danger && Result.Diabetes == DefaultStatus.Danger) => new TrafficLight.Item("Blood sugar", TrafficLight.Status.Red, "Your results show that you are at high risk of developing diabetes. Please contact your GP clinic for a non-urgent appointment to discuss your results and access additional support."),
                BloodSugarStatus.Severe => new TrafficLight.Item("Blood sugar", Convert(Result.BloodSugar), "Your results show that your blood sugar level is extremely high. If you are not already receiving support for this from a healthcare professional please contact your GP clinic urgently. If you are not able to make urgent contact with your GP clinic, please ring 111. If you do not do this you could be seriously endangering your health."),
                var bloodsugar when (bloodsugar is null && (
                    Result.BodyMassIndex >= BodyMassIndexStatus.Overweight ||
                    Result.BloodPressure >= BloodPressureStatus.High ||
                    Result.Diabetes == DefaultStatus.Danger)) => new TrafficLight.Item("Blood sugar", TrafficLight.Status.Red, "You do not know your blood sugar level. Please have it checked. It is important that you have your blood sugar level checked as you may be at an increased risk of Type 2 diabetes. We will direct you to a way of getting this blood test done.")
                    {
                        StatusText = UnknownStatusText
                    },
                null => new TrafficLight.Item("Blood sugar", TrafficLight.Status.Amber, "You do not know your blood sugar level.")
                {
                    StatusText = UnknownStatusText
                }
            };

            var riskFactors = new List<string>();

            if (Check.FamilyHistoryCVD == true)
            {
                riskFactors.Add("angina or heart attack in a close family member under the age of 60");
            }

            if (Check.ChronicKidneyDisease == true)
            {
                riskFactors.Add("chronic kidney disease");
            }

            if (Check.AtrialFibrillation == true)
            {
                riskFactors.Add("atrial fibrillation");
            }

            if (Check.BloodPressureTreatment == true)
            {
                riskFactors.Add("you are on blood pressure treatment");
            }

            if (Check.Migraines == true)
            {
                riskFactors.Add("migraines");
            }

            if (Check.RheumatoidArthritis == true)
            {
                riskFactors.Add("rheumatoid arthritis");
            }

            if (Check.SystemicLupusErythematosus == YesNoSkip.Yes)
            {
                riskFactors.Add("systemic lupus erythematosus");
            }

            if (Check.SevereMentalIllness == YesNoSkip.Yes)
            {
                riskFactors.Add("severe mental illness");
            }

            if (Check.AtypicalAntipsychoticMedication == YesNoSkip.Yes)
            {
                riskFactors.Add("you are on atypical antipsychotic medication");
            }

            if (riskFactors.Any())
            {
                var hasModifiableBehaviours = (Result.BodyMassIndex != BodyMassIndexStatus.Healthy ||
                    Result.Alcohol != DefaultStatus.Healthy ||
                    Result.Smoker != DefaultStatus.Healthy ||
                    Result.PhysicalActivity != PhysicalActivityStatus.Active ||
                    (Result.BloodPressure is not null && Result.BloodPressure != BloodPressureStatus.Healthy) ||
                    (Result.Cholesterol is not null && Result.Cholesterol != DefaultStatus.Healthy) ||
                    (Result.BloodSugar is not null && Result.BloodSugar != BloodSugarStatus.Healthy));

                var secondLine = hasModifiableBehaviours ?
                    "While it is not possible to change these risk factors, you can reduce your risk by living a healthier lifestyle. Please consider the services we offer in the follow-up section." :
                    "While it is not possible to change these risk factors, you can keep your risk as low as possible by maintaining your healthy lifestyle. Please consider the services we offer in the follow-up section.";

                yield return new TrafficLight.Item("Risk factors", TrafficLight.Status.Red, $"Your results show that you have the following risk factors: {string.Join(", ", riskFactors)}. {secondLine}");
            }
        }
    }

    private bool ShouldShowExtraTextForUnknownBloodSugar =>
        Result.BloodPressure == BloodPressureStatus.High ||
        Result.BloodPressure == BloodPressureStatus.Severe ||
        Result.BodyMassIndex == BodyMassIndexStatus.Obese ||
        Result.Diabetes == DefaultStatus.Danger;
}